# Sample model defined in ALFA
namespace demo.model

# Type of customer based on usage
enum CustomerType {
    Standard                    ## Less than $1000 spend annually 
    Gold                        ## Between $1000 to $10,000 spend annually
    Platinum                    ## Over $10,000 annual spend
} 

# Base Person type with generic fields 
@PII( Classification = DataClassification.Confidential,
      Sensitivity = DataSensitivity.High )
trait Person scope Employee, Customer {
    FirstName : string                          ## Legal first and middle name
    LastName : string                           ## Legal last name
    DateOfBirth : date("1900-01-01", *)         ## Date of birth 
    // Address : list<string>      ## Residential address

    # Ensure derived type instance is an adult
    assert IsAdult {
        # Capture age
        let age = dateDiff( DateOfBirth, today() )/365  
        if (age<18) 
            raise error("Age ${age} - not an adult. Dob ${DateOfBirth}.") 
    }
}

